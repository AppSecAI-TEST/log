buildscript {
	repositories {
		jcenter()
	}
	dependencies {
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.+'
	}
}


apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

def GROUPID = 'co.trikita'
def ARTIFACT = 'log'
def VERSION = '1.1.2'
def DESCRIPTION = 'Ultimately minimal yet very convenient logger for Android and Java'
def WEBURL = 'https://github.com/zserge/log'
def SCMURL = 'https://github.com/zserge/log.git'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
	jcenter()
}

dependencies {
  testCompile 'junit:junit:4.+'
}

sourceSets {
	androidTest {
		java {
			compileClasspath += main.output
			runtimeClasspath += main.output
		}
	}
}

configurations {
	androidTestCompile.extendsFrom testCompile
	androidTestRuntime.extendsFrom testRuntime
}

task androidTest(type: Test) {
	testClassesDir = sourceSets.androidTest.output.classesDir
	classpath = sourceSets.androidTest.runtimeClasspath
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar, javadocJar
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			groupId GROUPID
			artifactId ARTIFACT
			version VERSION
			from components.java
			artifact sourcesJar
			artifact javadocJar
			pom.withXml {
				def root = asNode()
				root.appendNode('name', ARTIFACT)
				root.appendNode('description', DESCRIPTION)
				root.appendNode('url', WEBURL)
				def dev = root.appendNode('developers').appendNode('developer')
				dev.appendNode('id', 'trikita')
				dev.appendNode('name', 'Trikita')
				dev.appendNode('email', 'zaitsev.serge@gmail.com')
				def scm = root.appendNode('scm')
				scm.appendNode('url', SCMURL)
				def license = root.appendNode('licenses').appendNode('license')
				license.appendNode('name', 'MIT License')
				license.appendNode('url', 'http://www.opensource.org/licenses/mit-license.php')
			}
		}
	}
}

Properties properties = new Properties()
try {
	properties.load(project.file('local.properties').newDataInputStream())
} catch (Exception e) {
	// Ignore, file may be missing
}

bintray {
	user = properties.getProperty("bintray.user")
	key = properties.getProperty("bintray.apikey")
	publications = ['mavenJava']
	pkg {
		repo = "maven"
		name = ARTIFACT
		websiteUrl = WEBURL
		vcsUrl = SCMURL
		licenses = ["MIT"]
		publish = true
		version {
			name = VERSION
			gpg {
				sign = true
				passphrase = properties.getProperty("bintray.gpg.password")
			}
			mavenCentralSync {
				sync = true
				user = properties.getProperty("bintray.oss.user")
				password = properties.getProperty("bintray.oss.password")
				close = '1'
			}
		}
	}
}
